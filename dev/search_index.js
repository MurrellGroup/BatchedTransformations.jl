var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = BatchedTransformations","category":"page"},{"location":"#BatchedTransformations","page":"Home","title":"BatchedTransformations","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for BatchedTransformations.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [BatchedTransformations]","category":"page"},{"location":"#BatchedTransformations.ComposedTransformations","page":"Home","title":"BatchedTransformations.ComposedTransformations","text":"ComposedTransformations{T2<:Transformations,T1<:Transformations}\n\nA ComposedTransformations contains two transformations t2 and t1 that are composed. It can be constructed with compose(t2, t1), t2 ∘ t1, and t2(t1), where t1 is the transformation to be applied first, and t2 second.\n\n\n\n\n\n","category":"type"},{"location":"#BatchedTransformations.InverseTransformations","page":"Home","title":"BatchedTransformations.InverseTransformations","text":"InverseTransformations{T<:Transformations}\n\nA InverseTransformations represents a lazy inverse of a Transformations t.\n\ninverse(t) is a lazy inverse that defaults to inv(t) when evaluated. transform(inverse(t), x) is equivalent to inverse_transform(t, x). This allows for specialized inverse transform implementations, that don't require the inverse to be computed explicitly.\n\n\n\n\n\n","category":"type"},{"location":"#BatchedTransformations.Transformations","page":"Home","title":"BatchedTransformations.Transformations","text":"Transformations\n\nA Transformations contains a batch of transformations that can be applied to an array. A Transformations t can be applied to x with transform(t, x), t ∘ x, and t(x).\n\n\n\n\n\n","category":"type"},{"location":"#BatchedTransformations.batched_transpose-Union{Tuple{A}, Tuple{N}, Tuple{T}} where {T, N, A<:AbstractArray{T, N}}","page":"Home","title":"BatchedTransformations.batched_transpose","text":"batched_transpose(data::AbstractArray)\n\nA lazy batched transpose of an array data, swapping the first two dimensions.\n\n\n\n\n\n","category":"method"}]
}
